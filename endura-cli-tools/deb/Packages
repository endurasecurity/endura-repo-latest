Package: endura-cli-tools
Version: 0.4.3.8e04ff4
Architecture: amd64
Maintainer: Infrared Security, LLC.
Installed-Size: 12051
Filename: ./endura-cli-tools_0.4.3.8e04ff4_amd64.deb
Size: 3205136
MD5sum: 89b50a4b5713a5b1e06e6aa9f292ca3a
SHA1: b3f98197ab0ad93e064da1af53a5f17ba542d831
SHA256: 8d1e5ab3019cc2881948268de82d8438eb2f98db9016b0a7d6e7f02abf037b8a
Section: Development
Priority: optional
Description: cli tools
 # endura-cli-tools
 .
 TBD
 .
 ## Environment Settings
 .
 - **ENDURA_BATCHER_AUTOFLUSH**: true/false (default: false)
 - **ENDURA_LOG_LEVEL**: level of logging (default: info, cli supported)
 - **ENDURA_LOG_FILE**: save logs to this file (default: undefined, cli
 supported)
 - **ENDURA_TEAM_SERVER**: https://your.team.server (default: undefined, cli
 supported)
 .
 ## ADDITIONAL CHECKS:
 .
 - Inventory of libraries being used
 .
 ## PRIORITY ISSUES
 .
 ### ISSUE: what's causing us to track the actual runner itself?
 .
 - runner executing with cwd set to job path. causes /usr/bin/endura tracking
 should be untouchable
 - why are we doing cwd? anything beyond the "container run"? maybe "cwd" only
 matches should not trigger job_pin
 .
   execute:
   - /home/runner/runners/2.322.0/bin/Runner.Worker:/usr/bin/bash
   - /home/runner/runners/2.322.0/externals/node20/bin/node:/usr/bin/git
   - /usr/bin/bash:/usr/bin/env
   - /usr/bin/bash:/usr/bin/make
   - /usr/bin/bash:/usr/bin/sleep
   - /usr/bin/bash:/usr/bin/sudo
   - /usr/bin/bash:/usr/local/lib/node_modules/npm/bin/npm-cli.js
   -
 /usr/bin/dash:/home/runner/work/endura-malware-demo/endura-malware-demo/node_modules/eslint/bin/eslint.js
   - /usr/bin/dash:/usr/bin/basename
   - /usr/bin/dash:/usr/bin/env
   - /usr/bin/dash:/usr/bin/envsubst
   - /usr/bin/dash:/usr/bin/gettext
   - /usr/bin/dash:/usr/bin/sed
   - /usr/bin/dash:/usr/bin/uname
   - /usr/bin/dash:/usr/lib/git-core/git
   - /usr/bin/env:/usr/local/bin/node
   - /usr/bin/git:/usr/bin/dash
   - /usr/bin/git:/usr/lib/git-core/git
   - /usr/bin/git:/usr/lib/git-core/git-submodule
   - /usr/bin/make:/usr/bin/bash
   - /usr/bin/sudo:/usr/bin/endura
   - /usr/local/bin/node:/usr/bin/dash
 .
 ### ISSUE: multiple ip address without hostname but we know are bound to
 "cloudflare"
 .
 - added logic to detect cloudflare ips upfront, but "cloudflare" is not the
 domain that was being accessed (alias)
   - /usr/local/bin/node:104.16.0.35:443
   - /usr/local/bin/node:104.16.1.35:443
   - /usr/local/bin/node:104.16.24.34:443
   - /usr/local/bin/node:104.16.25.34:443
   - /usr/local/bin/node:104.16.26.34:443
   - /usr/local/bin/node:104.16.27.34:443
   - /usr/local/bin/node:104.16.28.34:443
   - /usr/local/bin/node:104.16.3.35:443
   - /usr/local/bin/node:104.16.30.34:443
 .
 ### ISSUE: derived policy does not include context like %workspace%, instead
 showing real value
 .
 -
 /usr/local/bin/node:/home/runner/work/endura-malware-demo/endura-malware-demo/node_modules/.bin
 .
 .
 ### ISSUE: how can we normalize this
 .
 UPDATE: just returning parent path
 UPDATE 2: not sure that's a good idea. reverted.
 .
 to just be node:[path]/node_modules?
   -
 /usr/local/bin/node:/home/runner/work/endura-malware-demo/endura-malware-demo/node_modules/word-wrap/index.js
   -
 /usr/local/bin/node:/home/runner/work/endura-malware-demo/endura-malware-demo/node_modules/word-wrap/package.json
   -
 /usr/local/bin/node:/home/runner/work/endura-malware-demo/endura-malware-demo/node_modules/yocto-queue
   -
 /usr/local/bin/node:/home/runner/work/endura-malware-demo/endura-malware-demo/node_modules/yocto-queue/index.d.ts
 .
 to just be .git?
   -
 /usr/lib/git-core/git:/home/runner/work/endura-malware-demo/endura-malware-demo/.git/HEAD
   -
 /usr/lib/git-core/git:/home/runner/work/endura-malware-demo/endura-malware-demo/.git/config
   -
 /usr/lib/git-core/git:/home/runner/work/endura-malware-demo/endura-malware-demo/.git/index
   -
 /usr/lib/git-core/git:/home/runner/work/endura-malware-demo/endura-malware-demo/.git/objects/09/tmp_obj_137KGD
 .
 to just be ~/.npm?
   -
 /usr/local/bin/node:/home/runner/.npm/_logs/2025-03-06T13_45_18_151Z-debug-0.log
   -
 /usr/local/bin/node:/home/runner/.npm/_logs/2025-03-06T13_45_20_594Z-debug-0.log
   -
 /usr/local/bin/node:/home/runner/.npm/_logs/2025-03-06T13_45_21_082Z-debug-0.log
   -
 /usr/local/bin/node:/home/runner/.npm/_logs/2025-03-06T13_45_22_600Z-debug-0.log
   -
 /usr/local/bin/node:/home/runner/.npm/_logs/2025-03-06T13_45_24_035Z-debug-0.log
 .
 ### [x] ISSUE: more candidate policy defaults
 .
 open:
   - /usr/bin/bash:/etc/passwd
   - /usr/bin/endura:/proc/sys/vm/overcommit_memory
   - /usr/bin/git:/etc/host.conf
   - /usr/bin/git:/etc/hosts
   - /usr/bin/git:/etc/passwd
   - /usr/bin/sudo:/etc/environment
   - /usr/bin/sudo:/etc/group
   - /usr/bin/sudo:/etc/host.conf
   - /usr/bin/sudo:/etc/hosts
   - /usr/bin/sudo:/etc/locale.conf
   - /usr/bin/sudo:/etc/login.defs
   - /usr/bin/sudo:/etc/pam.d/common-account
   - /usr/bin/sudo:/etc/pam.d/common-auth
   - /usr/bin/sudo:/etc/pam.d/common-password
   - /usr/bin/sudo:/etc/pam.d/common-session
   - /usr/bin/sudo:/etc/pam.d/common-session-noninteractive
   - /usr/bin/sudo:/etc/pam.d/other
   - /usr/bin/sudo:/etc/pam.d/sudo
   - /usr/bin/sudo:/etc/passwd
   - /usr/bin/sudo:/etc/security/capability.conf
   - /usr/bin/sudo:/etc/security/limits.conf
   - /usr/bin/sudo:/etc/security/limits.d
   - /usr/bin/sudo:/etc/security/pam_env.conf
   - /usr/bin/sudo:/etc/shadow
   - /usr/lib/git-core/git:/dev/urandom
   - /usr/local/bin/node:/run/systemd/resolve/stub-resolv.conf
 .
 ## ISSUE: how do we handle programs reading arbitrary /proc/[pid] paths?
 .
   - /usr/local/bin/node:/proc/2445/cgroup
   - /usr/local/bin/node:/proc/2445/maps
   - /usr/local/bin/node:/proc/2457/cgroup
   - /usr/local/bin/node:/proc/2457/maps
   - /usr/local/bin/node:/proc/2469/cgroup
   - /usr/local/bin/node:/proc/2469/maps
   - /usr/local/bin/node:/proc/2483/cgroup
   - /usr/local/bin/node:/proc/2483/maps
   - /usr/local/bin/node:/proc/2497/cgroup
   - /usr/local/bin/node:/proc/2497/maps
   - /usr/local/bin/node:/proc/2508/cgroup
   - /usr/local/bin/node:/proc/2508/maps
 .
 ### [x] ISSUE: Need to expand capability prog to denote specific capabilities
 permitted
 .
 ex: CAP_DAC_OVERRIDE for /usr/lib/git-core/git
 .
 ### [x] ISSUE: How are these programs triggering fileless execute?
 .
 - triggered via mprotect due to JIT (W then later X)
 .
 fileless:
   execute:
   - /home/runner/runners/2.322.0/externals/node20/bin/node
   - /usr/local/bin/node
 .
 ## BACKLOG ISSUES
 .
 ### ISSUE: mode derive failed
 .
 - not all events getting processed before job is removed
 - temporary workaround in job stop command:
 .
     // FIXME: best effort to allow processing of remaining events
     std::thread::sleep(Duration::from_secs(3));
 .
 ### ISSUE: policy validation spread between model.rs and bpf/policy.rs
 .
 - need common expression parser and validator
 .
 ### ISSUE: some "writes" have empty dst path
 .
  - '/usr/bin/bash:'
   - '/usr/bin/endura:'
   - '/usr/bin/make:'
   - '/usr/local/bin/node:'
 .
 ## ISSUE: likely need an "overwrite" policy
 .
 - assume github actions and the demo app
 -> runner is based on node (is this actually true?)
 -> npm install run by node
 -> node can write to anything in workspace
 - where is the "git clone" equivalent in the server logs?
 -> ANS: events were lost due to starting job before server ready
 .
 ## QUESTION: musl threading performance issues
 .
 - see:
 https://www.linkedin.com/pulse/testing-alternative-c-memory-allocators-pt-2-musl-mystery-gomes/
 - adopt mimalloc? already implemented. no metrics to assess impact!!

